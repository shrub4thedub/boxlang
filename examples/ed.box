

[fn writebuf file]
  set out ""
  set i 0
  for line in ${buf[*]}
    if match $i "0"
      set out $line
    else
      set out "$out\n$line"
    end
    arith $i + 1
    set i $_arith_result
  end
  write $file $out
end

[fn readbuf file]
  if exists $file
    set buf $(cat $file)
    len ${buf[*]}
    set curr $_len_result
  end
  if not exists $file
    set buf
    set curr 0
  end
end

[fn collect_lines]
  set lines
  while true
    prompt ""
    set line $reply
    if match $line "."
      break
    end
    set lines ${lines[*]} "$line"
  end
end


[fn insert]
  collect_lines
  len ${lines[*]}
  if match $_len_result "0"
    return 0
  end

  arith $curr - 1
  set pos $_arith_result
  if match $curr "0"
    set pos 0
  end

  len ${buf[*]}
  set total $_len_result

  if match $total "0"
    set buf ${lines[*]}
    len ${lines[*]}
    set curr $_len_result
    return 0
  end

  set newbuf
  set i 0
  for line in ${buf[*]}
    if match $i "$pos"
      set newbuf ${newbuf[*]} ${lines[*]}
    end
    set newbuf ${newbuf[*]} "$line"
    arith $i + 1
    set i $_arith_result
  end
  arith $pos - $total
  if match $_arith_result "-*"
    # nothing
  else
    set newbuf ${newbuf[*]} ${lines[*]}
  end

  set buf ${newbuf[*]}
  len ${lines[*]}
  set added $_len_result
  arith $pos + $added
  set curr $_arith_result
end

[fn append]
  arith $curr + 1
  set curr $_arith_result
  insert
end

[fn delete]
  if match $curr "0"
    return 0
  end

  arith $curr - 1
  set pos $_arith_result

  set newbuf
  set i 0
  for line in ${buf[*]}
    if not match $i "$pos"
      set newbuf ${newbuf[*]} "$line"
    end
    arith $i + 1
    set i $_arith_result
  end

  set buf ${newbuf[*]}
  len ${newbuf[*]}
  set newtotal $_len_result
  arith $pos + 1
  set next $_arith_result
  arith $newtotal - $next
  if match $_arith_result "-*"
    set curr $newtotal
  else
    set curr $next
  end
end

[fn change]
  if match $curr "0"
    return 0
  end
  set pos $curr
  delete
  arith $pos - 1
  set curr $_arith_result
  append
end

[main]
  # ed implementation in Box
  # run with: ./box examples/ed.box [file]
  set file $1
  set buf
  set curr 0
  set reply ""

  readbuf $file

  while true
    prompt ":"
    if match $status "1"
      # EOF reached, exit
      break
    end
    set cmd $reply

    if match $cmd "q"
      break
    end

    if match $cmd "a"
      append
      continue
    end

    if match $cmd "i"
      insert
      continue
    end

    if match $cmd "c"
      change
      continue
    end

    if match $cmd "d"
      delete
      continue
    end

    if match $cmd "n"
      if match $curr "0"
        continue
      end
      arith $curr - 1
      set idx $_arith_result
      echo "$curr\t${buf[$idx]}"
      continue
    end

    if match $cmd "p"
      if match $curr "0"
        continue
      end
      arith $curr - 1
      set idx $_arith_result
      echo ${buf[$idx]}
      continue
    end

    if match $cmd "="
      echo $curr
      continue
    end

    if match $cmd "$"
      len ${buf[*]}
      set curr $_len_result
      if match $curr "0"
        continue
      end
      arith $curr - 1
      set idx $_arith_result
      echo ${buf[$idx]}
      continue
    end

    if match $cmd "w"
      writebuf $file
      continue
    end

    if match $cmd "r"
      readbuf $file
      continue
    end

    if match $cmd "[0-9][0-9]*"
      arith $cmd
      set curr $_arith_result
      continue
    end

    echo "?"
  end
end
