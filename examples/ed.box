[fn writebuf file]
  join "\n" ${buf[*]} | run tee $file
end

[fn append]
  while true
    prompt ""
    set line $reply
    if match $line "."
      return 0
    end
    set buf ${buf[*]} $line
    arith $curr + 1
    set curr $_arith_result
  end
end

[fn insert]
  # insert before current line
  if arith $curr "<" 1
    set curr 1
  end

  set lines
  while true
    prompt ""
    set line $reply
    if match $line "."
      break
    end
    set lines ${lines[*]} $line
  end
  if not ${lines[0]}
    return 0
  end

  arith $curr - 1
  set pos $_arith_result

  len ${buf[*]}
  set total $_len_result

  set newbuf
  set i 0
  while test $i -lt $total
    if test $i -eq $pos
      set newbuf ${newbuf[*]} ${lines[*]}
    end
    set newbuf ${newbuf[*]} ${buf[$i]}
    arith $i + 1
    set i $_arith_result
  end
  if test $pos -ge $total
    set newbuf ${newbuf[*]} ${lines[*]}
  end

  set buf ${newbuf[*]}
  len ${lines[*]}
  set added $_len_result
  arith $pos + $added
  set curr $_arith_result
end

[fn delete]
  if arith $curr "<=" 0
    return 0
  end

  arith $curr - 1
  set pos $_arith_result

  len ${buf[*]}
  set total $_len_result

  set newbuf
  set i 0
  while test $i -lt $total
    if test $i -ne $pos
      set newbuf ${newbuf[*]} ${buf[$i]}
    end
    arith $i + 1
    set i $_arith_result
  end

  set buf ${newbuf[*]}
  len ${newbuf[*]}
  set newtotal $_len_result
  arith $pos + 1
  set next $_arith_result
  if test $next -gt $newtotal
    set curr $newtotal
  else
    set curr $next
  end
end

[fn change]
  if arith $curr "<=" 0
    return 0
  end
  set pos $curr
  delete
  arith $pos - 1
  set curr $_arith_result
  append
end

[main]
  set file $1
  set buf
  set curr 0
  set reply ""

  if exists $file
    set buf $(cat $file)
    len ${buf[*]}
    set curr $_len_result
  end

  while true
    prompt ":"
    if match $status "1"
      break
    end
    set cmd $reply

    if match $cmd "q"
      break
    end

    if match $cmd "a"
      append
      continue
    end

    if match $cmd "i"
      insert
      continue
    end

    if match $cmd "c"
      change
      continue
    end

    if match $cmd "d"
      delete
      continue
    end

    if match $cmd "n"
      if match $curr "[1-9]*"
        arith $curr - 1
        set idx $_arith_result
        echo "$curr\t${buf[$idx]}"
      end
      continue
    end

    if match $cmd "p"
      if match $curr "[1-9]*"
        arith $curr - 1
        set idx $_arith_result
        echo ${buf[$idx]}
      end
      continue
    end

    if match $cmd "="
      echo $curr
      continue
    end

    if match $cmd "\$"
      len ${buf[*]}
      set curr $_len_result
      if match $curr "[1-9]*"
        arith $curr - 1
        set idx $_arith_result
        echo ${buf[$idx]}
      end
      continue
    end

    if match $cmd "w"
      writebuf $file
      continue
    end

    if match $cmd "[0-9]*"
      set curr $cmd
      continue
    end

    echo "?"
  end
end
